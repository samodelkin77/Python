class Solution:
    def isStringPolindrom (self, s: str) -> bool:
        for i in range (len (s) // 2):
            # print (i, s [i], s [-i - 1])
            if s [i] != s [-i - 1]:
                result = False
                break
        else:
            result = True
        # print (s, result)    
        return result


    def longestPalindrome (self, s: str) -> str:
        res = s[0]
        first, i = 0, 1
        while first < len (s) - len (res):
            j = s.find (s[first], i)
            if j > -1:
                p = s[first:j+1]
                # print (p)
                if j - first + 1 > len (res) and self.isStringPolindrom (p):
                    res = p
                i = j + 1
            else:
                first, i = first + 1, first + 2
        return res


z = Solution()
# z.selfTest()
print (z.longestPalindrome